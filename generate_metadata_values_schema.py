#!/usr/bin/env python3
import os

metadata_definition_file = os.path.dirname(os.path.dirname(__file__)) + "/metadata_definitions.tsv"
out_file_name = os.path.abspath(os.path.dirname(__file__)) + "/src/metadata_values.py"

# print(metadata_definition_file)
# print(out_file_name)

template = """\
from pydantic import BaseModel, Field

# This file is automatically generated by generate_metadata_values_schema.py
# Do not edit this file directly.

class MetadataValues(BaseModel, extra="allow"):
<FIELDS>
"""

# name: str = Field("", title="The name of the item", description="The name of the item", examples=["DEFAULT NAME", "DEF2"])

def read_definition(definition_file: str):
    """
    メタデータの定義ファイルを読み込み、Fieldを返す
    # name: str = Field("", title="The name of the item", description="The description of the item", examples=["DEFAULT NAME", "DEF2"])

    """

    ret = ""
    for line in open(definition_file):
        if line.startswith("#"):
            continue
        cols = line.rstrip("\n").split("\t")
        name, label, qualifier, feature, entry, type_, required, pattern, \
            default_value, private, example, help, error_message = cols
        ret += f'    {name}: str = Field("", title="{label}", description="{label}", examples=["{example}"])\n'
    return ret

fields = read_definition(metadata_definition_file)
with open(out_file_name, "w") as f:
    f.write(template.replace("<FIELDS>", fields))
